name: CI â†’ TEST (build & redeploy via SSH)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}         # permite dispararlo manualmente desde Actions

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Compose IMAGE_NAME
        run: |
          echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY_OWNER,,}/${GITHUB_REPOSITORY##*/}-lawapp" >> $GITHUB_ENV
          echo "Usando imagen: ${GITHUB_ENV}"

      - name: Login to GHCR (push)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (test-latest + sha)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          build-args: |
            NG_ENV=production
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:test-latest
            ${{ env.IMAGE_NAME }}:test-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  redeploy-on-vps:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH redeploy (Docker Swarm)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script_stop: true
          script: |
            set -e
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

            SERVICE="app-dev_app_test"   # ej: app-dev_app_test
            docker service update \
              --with-registry-auth \
              --image ${{ secrets.IMAGE_NAME }}:test-latest \
              --force \
              "$SERVICE"

            docker service ps "$SERVICE" --no-trunc
